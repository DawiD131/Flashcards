{"version":3,"sources":["Components/Atoms/Header.js","Components/Atoms/WordField.js","Components/Molecules/Card.js","Components/Atoms/Button.js","Components/Molecules/ButtonBar.js","Components/Shared/StyledForm.js","Components/Molecules/ChooseLessonForm.js","Components/Shared/StyledInput.js","Components/Molecules/AddWordForm.js","Components/Molecules/AddLessonForm.js","Components/Organisms/PanelForm.js","Components/Atoms/ProcentField.js","Components/Molecules/ButtonBottomBar.js","Components/Shared/GlobalTheme.js","Components/Templates/MainBoard.js","Components/Templates/WordList.js","Components/Pages/App.js","index.js"],"names":["StyledText","styled","h1","HeaderBox","div","Header","props","txt","WordText","h2","WordField","word","StyledWrapper","WordBox","Card","show","isWordVisible","translation","lessonsSubjects","length","StyledButton","button","dangerous","good","warning","control","secondary","isLearned","submit","Button","onClick","function","ButtonBar","handleIsLearnedClick","Prevfunc","Showfunc","Nextfunc","StyledForm","form","Select","select","ChooseLessonForm","onSubmit","handleSubmit","name","value","onChange","handleChange","lessons","map","item","index","key","type","StyledInput","input","handleAddWordSubmit","htmlFor","autoComplete","placeholder","WordValue","TranslationValue","AddLessonForm","handleLessonSubmit","LessonValue","bounceAnimation","keyframes","bounce","BouncyDiv","PanelForm","AddWordForm","h3","ProcentField","StyledBox","StyledWordListBox","StyledPanel","ButtonBottomBar","main","words","lesson","procentValue","to","renderAs","handleIsFormPanelVisibleClick","visible","GlobalStyle","createGlobalStyle","StyledCardBox","App","state","currentLessonValue","number","lessonSelectValue","wordValue","translationValue","lessonValue","isFormPanelVisible","messages","text_incorrect","e","setState","target","event","counter","fetch","then","response","json","data","Math","round","preventDefault","validation","formValidation","window","alert","isRepeat","OldWords","method","headers","body","JSON","stringify","newWord","translate","push","handleClick","NextOrPrev","handleShowWordClick","status","handleKeyEvent","items","typeOfItems","toUpperCase","console","log","ok","Error","catch","error","this","handleKeys","onKeyEvent","React","Component","Table","table","Td","td","Th","th","WordList","handleConfirm","lessonOrWord","itemToDelete","confirm","handleDeleteLessonClick","handleDeleteClick","element","el","id","splice","basename","process","exact","path","MainBoard","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d670fbd0.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledText = styled.h1`\n  margin-top: 1%;\n  font-size: 50px;\n  font-weight: 300;\n  color: black;\n`;\n\nconst HeaderBox = styled.div`\n  background-color: #3098d9;\n  display: flex;\n  height: 9vh;\n  justify-content: center;\n`;\n\nfunction Header(props) {\n  return (\n    <HeaderBox>\n      <StyledText>{props.txt}</StyledText>\n    </HeaderBox>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst WordText = styled.h2`\n  font-size: 35px;\n`;\n\nfunction WordField(props) {\n  return <WordText>{props.word}</WordText>;\n}\n\nexport default WordField;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport WordField from \"../Atoms/WordField\";\n\nconst StyledWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  border-radius: 10px;\n  height: 93%;\n  background-color: #41a1dc;\n  box-shadow: inset 0 0 5px #000000;\n`;\n\nconst WordBox = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 70%;\n  height: 25%;\n  border-bottom: 1px solid black;\n  margin: 2%;\n`;\n\nfunction Card(props) {\n  return (\n    <>\n      <StyledWrapper>\n        {props.show === true ? (\n          <>\n            <WordBox>\n              <WordField word={props.word} />\n            </WordBox>\n            <WordBox>\n              {props.isWordVisible ? (\n                <WordField word={props.translation} />\n              ) : null}\n            </WordBox>\n          </>\n        ) : props.lessonsSubjects.length > 0 ? (\n          <WordField word=\"Brak słówek\" />\n        ) : (\n          <WordField word=\"Najpierw dodaj lekcję\" />\n        )}\n      </StyledWrapper>\n    </>\n  );\n}\n\nexport default Card;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledButton = styled.button`\n  background: ${(props) =>\n    props.dangerous\n      ? \"#ff691f\"\n      : props.good\n      ? \"green\"\n      : props.warning\n      ? \"#ffa91f\"\n      : props.control\n      ? \"#0e486c\"\n      : \"#0276f2\"};\n  font-size: 16px;\n  box-shadow: 1px 2px 4px black;\n  border: 0;\n  border-radius: 5px;\n  margin-right: ${(props) => (props.secondary ? \"7px\" : \"null\")};\n  color: black;\n  width: ${(props) => (props.isLearned ? \"8%\" : \"\")};\n  height: 30px;\n  outline: none;\n  cursor: pointer;\n  margin-top: ${(props) => (props.submit ? \"5px\" : null)};\n  &:hover {\n    box-shadow: 3px 3px 4px black;\n  }\n`;\n\nfunction Button(props) {\n  return (\n    <StyledButton\n      submit={props.submit}\n      control={props.control}\n      isLearned={props.isLearned}\n      dangerous={props.dangerous}\n      secondary={props.secondary}\n      warning={props.warning}\n      good={props.good}\n      onClick={props.function}\n    >\n      {props.txt}\n    </StyledButton>\n  );\n}\n\nexport default Button;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Button from \"../Atoms/Button\";\n\nconst StyledWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 3%;\n  width: 100%;\n  border-radius: 10px;\n  height: 4%;\n`;\n\nfunction ButtonBar(props) {\n  return (\n    <StyledWrapper>\n      <Button\n        isLearned\n        secondary\n        dangerous\n        function={() => props.handleIsLearnedClick(false)}\n        txt=\"-\"\n      />\n      <Button control secondary function={props.Prevfunc} txt=\"<\" />\n      <Button\n        control\n        secondary\n        function={props.Showfunc}\n        txt={props.isWordVisible ? \"HIDE\" : \"SHOW\"}\n      />\n      <Button control secondary function={props.Nextfunc} txt=\">\" />\n      <Button\n        isLearned\n        secondary\n        good\n        function={() => props.handleIsLearnedClick(true)}\n        txt=\"+\"\n      />\n    </StyledWrapper>\n  );\n}\n\nexport default ButtonBar;\n","import styled from \"styled-components\";\n\nconst StyledForm = styled.form`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  width: 20%;\n  padding: 8px;\n  margin: 10px;\n  background-color: #3098d9;\n  box-shadow: 3px 3px 4px black;\n  border-radius: 10px;\n`;\n\nexport default StyledForm;\n","import React from \"react\";\nimport Button from \"../Atoms/Button\";\nimport styled from \"styled-components\";\nimport StyledForm from \"../Shared/StyledForm\";\n\nconst Select = styled.select`\n  width: 40%;\n  height: 17%;\n  font-size: 13px;\n  margin-bottom: 1%;\n  background: #f2e3bc;\n  outline: none;\n  display: block;\n  border: none;\n  border-radius: 4px;\n`;\n\nfunction ChooseLessonForm(props) {\n  return (\n    <>\n      <StyledForm onSubmit={props.handleSubmit}>\n        <h2>Lekcja:</h2>\n\n        <Select\n          name=\"lessonSelectValue\"\n          value={props.value}\n          onChange={props.handleChange}\n        >\n          {props.lessons.map((item, index) => {\n            return (\n              <option key={index} value={item}>\n                {item}\n              </option>\n            );\n          })}\n        </Select>\n\n        <Button submit type=\"submit\" txt=\"Wybierz\" />\n      </StyledForm>\n    </>\n  );\n}\n\nexport default ChooseLessonForm;\n","import styled from \"styled-components\";\n\nconst StyledInput = styled.input`\n  width: 100%;\n  background-color: #f2e3bc;\n  color: black;\n  border: none;\n  outline: none;\n  height: 40%;\n  padding: 3%;\n  margin-bottom: 1%;\n  margin-top: 2%;\n  border-radius: 4px;\n  cursor: pointer;\n  display: block;\n`;\n\nexport default StyledInput;\n","import React from \"react\";\nimport Button from \"../Atoms/Button\";\nimport StyledInput from \"../Shared/StyledInput\";\nimport StyledForm from \"../Shared/StyledForm\";\n\nfunction ChooseLessonForm(props) {\n  return (\n    <StyledForm onSubmit={props.handleAddWordSubmit}>\n      <h2>Dodaj fiszkę</h2>\n      <label htmlFor=\"wordValue\">\n        Słówko:\n        <StyledInput\n          autoComplete=\"off\"\n          type=\"text\"\n          name=\"wordValue\"\n          placeholder=\"Wpisz słówko\"\n          value={props.WordValue}\n          onChange={props.handleChange}\n        />\n      </label>\n      <label htmlFor=\"translationValue\">\n        Tłumaczenie:\n        <StyledInput\n          autoComplete=\"off\"\n          type=\"text\"\n          name=\"translationValue\"\n          placeholder=\"Wpisz tłumaczenie\"\n          value={props.TranslationValue}\n          onChange={props.handleChange}\n        />\n      </label>\n      <Button submit type=\"submit\" txt=\"Dodaj\" />\n    </StyledForm>\n  );\n}\n\nexport default ChooseLessonForm;\n","import React from \"react\";\nimport Button from \"../Atoms/Button\";\nimport StyledInput from \"../Shared/StyledInput\";\nimport StyledForm from \"../Shared/StyledForm\";\n\nfunction AddLessonForm(props) {\n  return (\n    <StyledForm onSubmit={props.handleLessonSubmit}>\n      <h2>Dodaj lekcję</h2>\n      <label htmlFor=\"lessonValue\">\n        Temat:\n        <StyledInput\n          autoComplete=\"off\"\n          type=\"text\"\n          name=\"lessonValue\"\n          placeholder=\"Wpisz temat lekcji\"\n          value={props.LessonValue}\n          onChange={props.handleChange}\n        />\n      </label>\n\n      <Button submit type=\"submit\" txt=\"Dodaj!\" />\n    </StyledForm>\n  );\n}\n\nexport default AddLessonForm;\n","import React from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport { bounce } from \"react-animations\";\nimport ChooseLessonForm from \"../Molecules/ChooseLessonForm\";\nimport AddWordForm from \"../Molecules/AddWordForm\";\nimport AddLessonForm from \"../Molecules/AddLessonForm\";\n\nconst bounceAnimation = keyframes`${bounce}`;\n\nconst BouncyDiv = styled.div`\n  animation: 1s ${bounceAnimation};\n  display: flex;\n  width: 100%;\n  justify-content: center;\n`;\n\nfunction PanelForm(props) {\n  return (\n    <BouncyDiv>\n      {props.lessonsSubjects.length > 0 ? (\n        <ChooseLessonForm\n          lessons={props.lessonsSubjects}\n          value={props.value}\n          handleSubmit={props.handleSubmit}\n          handleChange={props.handleChange}\n        />\n      ) : null}\n      {props.lessonsSubjects.length > 0 ? (\n        <AddWordForm\n          WordValue={props.WordValue}\n          TranslationValue={props.TranslationValue}\n          handleAddWordSubmit={props.handleAddWordSubmit}\n          handleChange={props.handleChange}\n        />\n      ) : null}\n\n      <AddLessonForm\n        LessonValue={props.LessonValue}\n        handleLessonSubmit={props.handleLessonSubmit}\n        handleChange={props.handleChange}\n      />\n    </BouncyDiv>\n  );\n}\n\nexport default PanelForm;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledText = styled.h3`\n  margin-left: 20px;\n`;\n\nfunction ProcentField(props) {\n  return <StyledText>{props.txt}</StyledText>;\n}\n\nexport default ProcentField;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Button from \"../Atoms/Button\";\nimport ProcentField from \"../Atoms/ProcentField\";\n\nconst StyledBox = styled.div`\n  display: flex;\n  height: 6vh;\n  border-top: 0.1vh solid black;\n`;\n\nconst StyledWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  align-content: center;\n  justify-content: flex-end;\n  width: 50%;\n  background-color: #3098d9;\n`;\n\nconst StyledWordListBox = styled.div`\n  display: flex;\n  align-items: center;\n  align-content: center;\n  justify-content: center;\n  width: 100%;\n  background-color: #3098d9;\n`;\n\nconst StyledPanel = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  width: 50%;\n  background-color: #3098d9;\n`;\n\nfunction ButtonBottomBar(props) {\n  return (\n    <StyledBox>\n      {props.main ? (\n        <>\n          <StyledPanel>\n            {props.words.length > 0 ? (\n              <ProcentField\n                txt={`Lekcja: ${props.lesson} została opanowana w ${props.procentValue}%`}\n              />\n            ) : null}\n          </StyledPanel>\n          <StyledWrapper>\n            <Link to=\"/WordList\">\n              <Button secondary warning renderAs=\"button\" txt=\"word list\" />\n            </Link>\n            <Button\n              secondary\n              warning\n              function={props.handleIsFormPanelVisibleClick}\n              txt={props.visible ? \"Ukryj panel\" : \"Pokaz panel\"}\n            />\n          </StyledWrapper>\n        </>\n      ) : (\n        <StyledWordListBox>\n          <Link to=\"/\">\n            <Button secondary renderAs=\"button\" txt=\"Main Board\" />\n          </Link>\n        </StyledWordListBox>\n      )}\n    </StyledBox>\n  );\n}\n\nexport default ButtonBottomBar;\n","import { createGlobalStyle } from \"styled-components\";\nconst GlobalStyle = createGlobalStyle`\nbody {\n  background: #53a9df;\n  font-family: 'Questrial', sans-serif;\n margin:0;\n \n}\n`;\n\nexport default GlobalStyle;\n","import React from \"react\";\nimport \"../../style.css\";\nimport styled from \"styled-components\";\nimport KeyboardEventHandler from \"react-keyboard-event-handler\";\nimport Header from \"../Atoms/Header\";\nimport Card from \"../Molecules/Card\";\nimport ButtonBar from \"../Molecules/ButtonBar\";\nimport PanelForm from \"../Organisms/PanelForm\";\nimport ButtonBottomBar from \"../Molecules/ButtonBottomBar\";\nimport GlobalStyle from \"../Shared/GlobalTheme\";\n\nconst StyledWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n  height: 85vh;\n  width: 100%;\n`;\n\nconst StyledCardBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 30%;\n  height: 35%;\n`;\n\nclass App extends React.Component {\n  state = {\n    words: [],\n    currentLessonValue: \"\",\n    lessonsSubjects: [],\n    number: 0,\n    lessonSelectValue: \"\",\n    wordValue: \"\",\n    translationValue: \"\",\n    lessonValue: \"\",\n    isWordVisible: false,\n    isFormPanelVisible: true,\n    procentValue: 0,\n  };\n\n  messages = {\n    text_incorrect:\n      \"Pole nie moze być puste i lekcja/słówko nie moze się powtarzac\",\n  };\n\n  componentDidMount() {\n    fetch(`http://localhost:9000/get_lessons_with_words`)\n      .then((response) => {\n        if (response.ok) {\n          return response;\n        }\n        throw Error(response.status);\n      })\n      .then((response) => response.json())\n      .then((data) => {\n        var words = [];\n        const lessons = data.map((item) => item.lesson);\n        console.log(lessons.length);\n        if (lessons.length > 0) {\n          words = data[0].words;\n          this.setState({\n            words,\n            currentLessonValue: lessons[0],\n            lessonSelectValue: lessons[0],\n          });\n        } else {\n          words = [];\n        }\n        this.setState({\n          lessonsSubjects: lessons,\n        });\n      })\n      .catch((error) => console.log(error));\n  }\n\n  handleChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  handleSubmit = (event) => {\n    const { lessonSelectValue } = this.state;\n    let counter = 0;\n    fetch(`http://localhost:9000/get_words/${lessonSelectValue}`)\n      .then((response) => response.json())\n      .then((data) => {\n        this.setState({\n          words: data.words,\n        });\n\n        data.words.map((item) => {\n          if (item.isLearned === true) {\n            counter++;\n          }\n        });\n        this.setState({\n          procentValue: Math.round((counter / data.words.length) * 100),\n        });\n      });\n    this.setState({\n      number: 0,\n      currentLessonValue: lessonSelectValue,\n    });\n    event.preventDefault();\n  };\n\n  handleAddWordSubmit = (event) => {\n    event.preventDefault();\n    const validation = this.formValidation(this.state.words, \"words\");\n    if (validation.wordValue === true || validation.translationValue === true) {\n      window.alert(\n        \"Żadne pole nie moze byc puste i słówko nie moze zaczynać się od spacji\"\n      );\n    } else if (validation.isRepeat) {\n      window.alert(\"Słówko nie moze się powtarzać\");\n    } else {\n      let counter = 0;\n      const {\n        currentLessonValue,\n        wordValue,\n        translationValue,\n        words,\n      } = this.state;\n      const OldWords = words;\n\n      fetch(\"http://localhost:9000/save_word\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          lesson: currentLessonValue,\n          word: wordValue,\n          translation: translationValue,\n          isLearned: false,\n        }),\n      });\n\n      const newWord = {\n        word: wordValue,\n        translate: translationValue,\n        isLearned: false,\n      };\n\n      words.push(newWord);\n\n      words.map((item) => {\n        if (item.isLearned === true) {\n          counter++;\n          return item;\n        } else return item;\n      });\n\n      if (counter === 0) {\n        this.setState({\n          procentValue: 0,\n        });\n      } else {\n        this.setState({\n          procentValue: Math.round((counter / words.length) * 100),\n        });\n      }\n      this.setState({\n        words: OldWords,\n        translationValue: \"\",\n        wordValue: \"\",\n      });\n    }\n  };\n\n  handleLessonSubmit = (event) => {\n    event.preventDefault();\n    const validation = this.formValidation(\n      this.state.lessonsSubjects,\n      \"lessons\"\n    );\n\n    if (validation.lessonValue === true) {\n      window.alert(\"Pole lekcji nie moze być puste i zaczynać się od spacji!\");\n    } else if (validation.isRepeat === true) {\n      window.alert(\"Lekcja nie moze się powtarzać!\");\n    } else {\n      const data = {\n        lesson: this.state.lessonValue,\n      };\n\n      fetch(\"http://localhost:9000/create_new_lesson\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      });\n\n      this.state.lessonsSubjects.push(this.state.lessonValue);\n\n      if (this.state.lessonsSubjects.length === 1) {\n        this.setState({\n          lessonSelectValue: this.state.lessonValue,\n        });\n      }\n      this.setState({\n        lessonsSubjects: this.state.lessonsSubjects,\n        lessonValue: \"\",\n        currentLessonValue:\n          this.state.lessonsSubjects.length === 1\n            ? this.state.lessonValue\n            : this.state.lessonsSubjects[0],\n      });\n    }\n  };\n\n  handleClick = (NextOrPrev) => {\n    const { number, words } = this.state;\n    this.setState({\n      isWordVisible: false,\n    });\n\n    switch (NextOrPrev) {\n      case \"Next\":\n        if (number + 1 === words.length) {\n          this.setState({\n            number: 0,\n          });\n        } else {\n          this.setState({\n            number: number + 1,\n          });\n        }\n        break;\n      case \"Prev\":\n        if (number < 1) {\n          this.setState({\n            number: words.length - 1,\n          });\n        } else {\n          this.setState({\n            number: number - 1,\n          });\n        }\n    }\n  };\n\n  handleIsFormPanelVisibleClick = () => {\n    this.setState({\n      isFormPanelVisible: !this.state.isFormPanelVisible,\n    });\n  };\n\n  handleShowWordClick = () => {\n    this.setState({\n      isWordVisible: !this.state.isWordVisible,\n    });\n  };\n\n  handleIsLearnedClick = (status) => {\n    const { words, number, currentLessonValue } = this.state;\n    let counter = 0;\n    const data = {\n      lesson: currentLessonValue,\n      word: words[number].word,\n      translate: words[number].translate,\n      isLearned: status,\n    };\n\n    fetch(\"http://localhost:9000/update_word_status\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    });\n\n    this.setState({\n      words: words.map((item) => {\n        if (words[number].word === item.word) {\n          item.isLearned = status;\n          return item;\n        } else return item;\n      }),\n    });\n\n    words.map((item) => {\n      if (item.isLearned === true) {\n        counter++;\n      }\n    });\n    this.setState({\n      procentValue: Math.round((counter / words.length) * 100),\n    });\n  };\n\n  handleKeyEvent = (key) => {\n    if (key === \"left\") {\n      this.handleClick(\"Prev\");\n    } else if (key === \"right\") {\n      this.handleClick(\"Next\");\n    } else if (key === \"down\") {\n      this.setState({\n        isWordVisible: !this.state.isWordVisible,\n      });\n    }\n  };\n\n  formValidation = (items, typeOfItems) => {\n    let lessonValue = false;\n    let wordValue = false;\n    let translationValue = false;\n    let isRepeat = false;\n\n    switch (typeOfItems) {\n      case \"words\":\n        items.map((item) => {\n          if (\n            item.word.toUpperCase() === this.state.wordValue.toUpperCase() ||\n            item.translate.toUpperCase() ===\n              this.state.lessonValue.toUpperCase()\n          ) {\n            isRepeat = true;\n            console.log(\"powtarza się\");\n          }\n        });\n        break;\n      case \"lessons\":\n        items.map((item) => {\n          if (item.toUpperCase() === this.state.lessonValue.toUpperCase()) {\n            isRepeat = true;\n          }\n        });\n        break;\n    }\n\n    if (\n      this.state.lessonValue.length === 0 ||\n      this.state.lessonValue[0] === \" \"\n    ) {\n      lessonValue = true;\n    }\n\n    if (this.state.wordValue.length === 0 || this.state.wordValue[0] === \" \") {\n      wordValue = true;\n    }\n\n    if (\n      this.state.translationValue.length === 0 ||\n      this.state.translationValue[0] === \" \"\n    ) {\n      translationValue = true;\n    }\n\n    return {\n      lessonValue,\n      wordValue,\n      translationValue,\n      isRepeat,\n    };\n  };\n  render() {\n    const {\n      currentLessonValue,\n      isWordVisible,\n      words,\n      number,\n      lessonsSubjects,\n      lessonSelectValue,\n      lessonValue,\n      wordValue,\n      translationValue,\n      isFormPanelVisible,\n    } = this.state;\n    return (\n      <>\n        <KeyboardEventHandler\n          handleKeys={[\"left\", \"right\", \"down\"]}\n          onKeyEvent={(key) => this.handleKeyEvent(key)}\n        />\n        <GlobalStyle />\n        <Header txt=\"FLASHCARDS\" />\n        <StyledWrapper>\n          <StyledCardBox>\n            {words.length > 0 ? (\n              <Card\n                isWordVisible={isWordVisible}\n                show={true}\n                word={words[number].word}\n                translation={words[number].translate}\n              />\n            ) : (\n              <Card show={false} lessonsSubjects={lessonsSubjects} />\n            )}\n            {words.length > 0 ? (\n              <ButtonBar\n                isWordVisible={isWordVisible}\n                handleIsLearnedClick={this.handleIsLearnedClick}\n                Prevfunc={() => this.handleClick(\"Prev\")}\n                Showfunc={this.handleShowWordClick}\n                Nextfunc={() => this.handleClick(\"Next\")}\n              />\n            ) : null}\n          </StyledCardBox>\n          {isFormPanelVisible ? (\n            <PanelForm\n              lessonsSubjects={lessonsSubjects}\n              value={lessonSelectValue}\n              handleSubmit={this.handleSubmit}\n              handleChange={this.handleChange}\n              WordValue={wordValue}\n              TranslationValue={translationValue}\n              handleAddWordSubmit={this.handleAddWordSubmit}\n              LessonValue={lessonValue}\n              handleLessonSubmit={this.handleLessonSubmit}\n            />\n          ) : null}\n        </StyledWrapper>\n        <ButtonBottomBar\n          main\n          lesson={currentLessonValue}\n          procentValue={this.state.procentValue}\n          words={words}\n          lessonsSubjects={lessonsSubjects}\n          handleIsFormPanelVisibleClick={this.handleIsFormPanelVisibleClick}\n          visible={isFormPanelVisible}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport \"../../style.css\";\nimport styled from \"styled-components\";\nimport GlobalStyle from \"../Shared/GlobalTheme\";\nimport Button from \"../Atoms/Button\";\nimport Header from \"../Atoms/Header\";\nimport ButtonBottomBar from \"../Molecules/ButtonBottomBar\";\n\nconst StyledWrapper = styled.div`\n  display: flex;\n  overflow: scroll;\n  flex-direction: column;\n  align-items: center;\n  height: 85vh;\n  width: 100%;\n`;\n\nconst Table = styled.table`\n  font-family: arial, sans-serif;\n  text-align: center;\n  border-collapse: collapse;\n  width: 35%;\n`;\nconst Td = styled.td`\n  border-bottom: 1px solid black;\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-end;\n  padding: 4px;\n`;\nconst Th = styled.th`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-end;\n  border-bottom: 1px solid black;\n  padding: 3px;\n`;\n\nclass WordList extends React.Component {\n  state = {\n    data: [],\n  };\n\n  componentDidMount() {\n    fetch(\"http://localhost:9000/get_lessons_with_words\")\n      .then((response) => {\n        if (response.ok) {\n          return response;\n        }\n        throw Error(response.status);\n      })\n      .then((response) => response.json())\n      .then((data) => {\n        this.setState({\n          data,\n        });\n      })\n      .catch((error) => console.log(error));\n  }\n\n  handleConfirm = (lessonOrWord, itemToDelete, lesson) => {\n    switch (lessonOrWord) {\n      case \"lesson\":\n        if (\n          window.confirm(`Czy na pewno chcesz usunąć lekcję ${itemToDelete}?`)\n        ) {\n          this.handleDeleteLessonClick(itemToDelete);\n        }\n        break;\n      case \"word\":\n        if (\n          window.confirm(`Czy na pewno chcesz usunąć słówko ${itemToDelete}?`)\n        ) {\n          this.handleDeleteClick(lesson, itemToDelete);\n        }\n        break;\n    }\n  };\n\n  handleDeleteClick = (lesson, element) => {\n    const { data } = this.state;\n\n    fetch(\"http://localhost:9000/delete_word\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        lesson: lesson,\n        word: element.word,\n        translation: element.translate,\n      }),\n    });\n\n    this.state.data.map((item, index) => {\n      if (lesson === item.lesson) {\n        this.state.data[index].words.map((el, id) => {\n          if (element === el.word) {\n            this.state.data[index].words.splice(id, 1);\n          }\n        });\n      }\n      this.setState({\n        data,\n      });\n    });\n  };\n\n  handleDeleteLessonClick = (itemToDelete) => {\n    fetch(\n      `http://localhost:9000/delete_lesson/${itemToDelete}`\n    ).then((response) => response.json());\n\n    let data = this.state.data;\n    data.map((item, id) => {\n      if (item.lesson === itemToDelete) {\n        data.splice(id, 1);\n      }\n      this.setState({\n        data,\n      });\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <GlobalStyle />\n        <Header txt=\"Lista fiszek\" />\n        <StyledWrapper>\n          {this.state.data.length === 0 ? (\n            <>\n              <h1>Brak lekcji</h1>\n              <br />\n              <h1>Przejdź do panelu głównego i dodaj lekcję</h1>\n            </>\n          ) : (\n            this.state.data.map((item, index) => {\n              return (\n                <Table key={index}>\n                  <tbody>\n                    <tr>\n                      <Th>\n                        {`Temat: ${item.lesson}`}\n                        <Button\n                          dangerous\n                          txt=\"Usuń\"\n                          function={() =>\n                            this.handleConfirm(\"lesson\", item.lesson, null)\n                          }\n                        />\n                      </Th>\n                    </tr>\n                    {item.words.map((element, index) => {\n                      return (\n                        <tr key={index}>\n                          <Td key={element.word}>\n                            {`${element.word} - ${element.translate}`}{\" \"}\n                            <Button\n                              key={element.translate}\n                              warning\n                              txt=\"Usuń\"\n                              function={() =>\n                                this.handleConfirm(\n                                  \"word\",\n                                  element.word,\n                                  item.lesson\n                                )\n                              }\n                            />\n                          </Td>\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </Table>\n              );\n            })\n          )}\n        </StyledWrapper>\n        <ButtonBottomBar />\n      </>\n    );\n  }\n}\n\nexport default WordList;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport MainBoard from \"../Templates/MainBoard\";\nimport WordList from \"../Templates/WordList\";\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route exact path=\"/\">\n          <MainBoard />\n        </Route>\n        <Route path=\"/WordList\">\n          <WordList />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/Pages/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}