{"version":3,"sources":["Components/Templates/MainTemplate/StyledTemplate.js","Components/Atoms/Header.js","Components/Atoms/WordField.js","Components/Molecules/Card.js","Components/Atoms/Button.js","Components/Molecules/ButtonBar.js","api.js","Components/Organisms/Board.js","Components/Shared/StyledForm.js","Components/Molecules/ChooseLessonForm.js","Components/Shared/StyledInput.js","Components/Molecules/AddWordForm.js","Components/Molecules/AddLessonForm.js","Components/Organisms/FormPanel.js","Components/Molecules/ButtonBottomBar.js","Components/Shared/GlobalTheme.js","Components/Templates/MainTemplate/MainTemplate.js","Components/Molecules/WordTable.js","Components/Templates/WordList.js","reducers/appReducer.js","Components/Pages/App.js","index.js"],"names":["StyledWrapper","styled","div","StyledText","h1","HeaderBox","Header","props","txt","WordText","h2","WordField","word","WordBox","Card","translation","lessonsSubjects","isTranslationVisible","length","StyledButton","button","dangerous","good","warning","control","secondary","isLearned","submit","Button","onClick","function","ButtonBar","handleIsLearnedClick","words","handleNextOrPrevClick","handleShowTranslationVisibleClick","API_URL","StyledCardBox","Board","currentLessonValue","handleAction","useState","wordNumber","setWordNumber","setIsTranslationVisible","prevValue","NextOrPrev","handleKeys","onKeyEvent","key","handleKeyEvent","status","fetch","method","headers","body","JSON","stringify","lesson","translate","type","StyledForm","form","Select","select","ChooseLessonForm","handleSubmit","value","handleLessonSelect","onSubmit","onChange","map","item","index","StyledInput","input","wordValue","setWordValue","translationValue","setTranslationValue","event","preventDefault","wordToAdd","htmlFor","autoComplete","name","placeholder","e","target","AddLessonForm","handleLessonSubmit","lessonValue","handleLessonInput","bounceAnimation","keyframes","bounce","BouncyDiv","FormPanel","isFormPanelVisible","handleWordInput","handleTranslationInput","AddWordForm","StyledBox","StyledWordListBox","StyledPanel","ButtonBottomBar","main","handleIsFormPanelVisibleClick","visible","to","renderAs","GlobalStyle","createGlobalStyle","MainTemplate","data","setWords","setCurrentLessonValue","setLessonsSubjects","lessonSelectValue","setLessonSelectValue","setLessonValue","setIsFormPanelVisible","useEffect","console","log","lessons","then","response","json","show","Table","table","Td","td","Th","th","WordTable","handleConfirm","element","WordList","setData","handleDeleteClick","el","id","splice","handleDeleteLessonClick","itemToDelete","lessonOrWord","window","confirm","appReducer","state","action","filter","push","App","useReducer","dispatch","ok","Error","catch","error","basename","process","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.de4c4783.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const StyledWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n  height: 85vh;\n  width: 100%;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledText = styled.h1`\n  margin-top: 1%;\n  font-size: 50px;\n  font-weight: 200;\n  color: black;\n`;\n\nconst HeaderBox = styled.div`\n  background-color: #3098d9;\n  display: flex;\n  height: 9vh;\n  justify-content: center;\n  box-shadow: 0 4px 2px -2px black;\n`;\n\nconst Header = (props) => {\n  return (\n    <HeaderBox>\n      <StyledText>{props.txt}</StyledText>\n    </HeaderBox>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst WordText = styled.h2`\n  font-size: 35px;\n`;\n\nconst WordField = (props) => {\n  return <WordText>{props.word}</WordText>;\n};\n\nexport default WordField;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport WordField from \"../Atoms/WordField\";\n\nconst StyledWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  border-radius: 10px;\n  height: 93%;\n  background-color: #41a1dc;\n  box-shadow: inset 0 0 5px #000000;\n`;\n\nconst WordBox = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 70%;\n  height: 25%;\n  border-bottom: 1px solid black;\n  margin: 2%;\n`;\n\nconst Card = ({ word, translation, lessonsSubjects, isTranslationVisible }) => {\n  return (\n    <>\n      <StyledWrapper>\n        {word ? (\n          <>\n            <WordBox>\n              <WordField word={word} />\n            </WordBox>\n            <WordBox>\n              {isTranslationVisible ? <WordField word={translation} /> : null}\n            </WordBox>\n          </>\n        ) : lessonsSubjects.length > 0 ? (\n          <WordField word=\"Brak słówek\" />\n        ) : (\n          <WordField word=\"Najpierw dodaj lekcję\" />\n        )}\n      </StyledWrapper>\n    </>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledButton = styled.button`\n  background: ${(props) =>\n    props.dangerous\n      ? \"#ff691f\"\n      : props.good\n      ? \"green\"\n      : props.warning\n      ? \"#ffa91f\"\n      : props.control\n      ? \"#0e486c\"\n      : \"#0276f2\"};\n  font-size: 16px;\n  box-shadow: 1px 2px 4px black;\n  border: 0;\n  border-radius: 5px;\n  margin-right: ${(props) => (props.secondary ? \"7px\" : \"null\")};\n  color: black;\n  width: ${(props) => (props.isLearned ? \"8%\" : \"\")};\n  height: 30px;\n  outline: none;\n  cursor: pointer;\n  margin-top: ${(props) => (props.submit ? \"5px\" : null)};\n  &:hover {\n    box-shadow: 3px 3px 4px black;\n  }\n`;\n\nconst Button = (props) => {\n  return (\n    <StyledButton\n      submit={props.submit}\n      control={props.control}\n      isLearned={props.isLearned}\n      dangerous={props.dangerous}\n      secondary={props.secondary}\n      warning={props.warning}\n      good={props.good}\n      onClick={props.function}\n    >\n      {props.txt}\n    </StyledButton>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Button from \"../Atoms/Button\";\n\nconst StyledWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 3%;\n  width: 100%;\n  border-radius: 10px;\n  height: 4%;\n`;\n\nconst ButtonBar = ({\n  handleIsLearnedClick,\n  words,\n  handleNextOrPrevClick,\n  handleShowTranslationVisibleClick,\n  isTranslationVisible,\n}) => {\n  return (\n    <>\n      {words.length > 0 ? (\n        <StyledWrapper>\n          <Button\n            isLearned\n            secondary\n            dangerous\n            function={() => handleIsLearnedClick(false, words)}\n            txt=\"-\"\n          />\n          <Button\n            control\n            secondary\n            function={() => handleNextOrPrevClick(\"Prev\")}\n            txt=\"<\"\n          />\n          <Button\n            control\n            secondary\n            function={handleShowTranslationVisibleClick}\n            txt={isTranslationVisible ? \"HIDE\" : \"SHOW\"}\n          />\n          <Button\n            control\n            secondary\n            function={() => handleNextOrPrevClick(\"Next\")}\n            txt=\">\"\n          />\n          <Button\n            isLearned\n            secondary\n            good\n            function={() => handleIsLearnedClick(true, words)}\n            txt=\"+\"\n          />\n        </StyledWrapper>\n      ) : null}\n    </>\n  );\n};\n\nexport default ButtonBar;\n","const API_URL = \"https://flashcards--api.herokuapp.com/\";\n\nexport default API_URL;\n","import React, { useState, useEffect } from \"react\";\nimport \"../../style.css\";\nimport styled from \"styled-components\";\nimport Card from \"../Molecules/Card\";\nimport ButtonBar from \"../Molecules/ButtonBar\";\nimport KeyboardEventHandler from \"react-keyboard-event-handler\";\nimport API_URL from \"../../api\";\n\nconst StyledCardBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 30%;\n  height: 35%;\n`;\n\nconst Board = ({\n  words,\n  lessonsSubjects,\n  currentLessonValue,\n  handleAction,\n}) => {\n  const [wordNumber, setWordNumber] = useState(0);\n  const [isTranslationVisible, setIsTranslationVisible] = useState(false);\n\n  const handleShowTranslationVisibleClick = () =>\n    setIsTranslationVisible((prevValue) => !prevValue);\n\n  const handleNextOrPrevClick = (NextOrPrev) => {\n    setIsTranslationVisible(false);\n    switch (NextOrPrev) {\n      case \"Next\":\n        if (wordNumber + 1 === words.length) {\n          setWordNumber(0);\n        } else {\n          setWordNumber((prevValue) => prevValue + 1);\n        }\n        break;\n      case \"Prev\":\n        if (wordNumber < 1) {\n          setWordNumber(words.length - 1);\n        } else {\n          setWordNumber((prevValue) => prevValue - 1);\n        }\n        break;\n      default:\n        return null;\n    }\n  };\n\n  const handleIsLearnedClick = (status) => {\n    fetch(`${API_URL}words/update_word_status`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        lesson: currentLessonValue,\n        word: words[wordNumber].word,\n        translation: words[wordNumber].translate,\n        isLearned: status,\n      }),\n    });\n    handleAction({\n      type: \"IS_WORD_LEARNED\",\n      lesson: currentLessonValue,\n      word: words[wordNumber].word,\n      status,\n    });\n  };\n\n  const handleKeyEvent = (key) => {\n    switch (key) {\n      case \"left\":\n        handleNextOrPrevClick(\"Prev\");\n        break;\n      case \"right\":\n        handleNextOrPrevClick(\"Next\");\n        break;\n      case \"down\":\n        handleShowTranslationVisibleClick();\n        break;\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <>\n      <KeyboardEventHandler\n        handleKeys={[\"left\", \"right\", \"down\"]}\n        onKeyEvent={(key) => handleKeyEvent(key)}\n      />\n      <StyledCardBox>\n        <Card\n          isTranslationVisible={isTranslationVisible}\n          word={words.length > 0 ? words[wordNumber].word : null}\n          translation={words.length > 0 ? words[wordNumber].translation : null}\n          lessonsSubjects={lessonsSubjects}\n        />\n        <ButtonBar\n          words={words}\n          isTranslationVisible={isTranslationVisible}\n          handleIsLearnedClick={handleIsLearnedClick}\n          handleNextOrPrevClick={handleNextOrPrevClick}\n          handleShowTranslationVisibleClick={handleShowTranslationVisibleClick}\n        />\n      </StyledCardBox>\n    </>\n  );\n};\n\nexport default Board;\n","import styled from \"styled-components\";\n\nconst StyledForm = styled.form`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  width: 20%;\n  padding: 8px;\n  margin: 10px;\n  background-color: #3098d9;\n  box-shadow: 3px 3px 4px black;\n  border-radius: 10px;\n`;\n\nexport default StyledForm;\n","import React from \"react\";\nimport Button from \"../Atoms/Button\";\nimport styled from \"styled-components\";\nimport StyledForm from \"../Shared/StyledForm\";\n\nconst Select = styled.select`\n  width: 40%;\n  height: 17%;\n  font-size: 13px;\n  margin-bottom: 1%;\n  background: #f2e3bc;\n  outline: none;\n  display: block;\n  border: none;\n  border-radius: 4px;\n`;\n\nconst ChooseLessonForm = ({\n  lessonsSubjects,\n  handleSubmit,\n  value,\n  handleLessonSelect,\n}) => {\n  return (\n    <>\n      {lessonsSubjects.length > 0 ? (\n        <StyledForm onSubmit={handleSubmit}>\n          <h2>Lekcja:</h2>\n          <Select value={value} onChange={handleLessonSelect}>\n            {lessonsSubjects.map((item, index) => {\n              return (\n                <option key={index} value={item}>\n                  {item}\n                </option>\n              );\n            })}\n          </Select>\n          <Button submit type=\"submit\" txt=\"Wybierz\" />\n        </StyledForm>\n      ) : null}\n    </>\n  );\n};\n\nexport default ChooseLessonForm;\n","import styled from \"styled-components\";\n\nconst StyledInput = styled.input`\n  width: 100%;\n  background-color: #f2e3bc;\n  color: black;\n  border: none;\n  outline: none;\n  height: 40%;\n  padding: 3%;\n  margin-bottom: 1%;\n  margin-top: 2%;\n  border-radius: 4px;\n  cursor: pointer;\n  display: block;\n`;\n\nexport default StyledInput;\n","import React, { useState } from \"react\";\nimport Button from \"../Atoms/Button\";\nimport StyledInput from \"../Shared/StyledInput\";\nimport StyledForm from \"../Shared/StyledForm\";\nimport API_URL from \"../../api\";\n\nconst ChooseLessonForm = ({\n  lessonsSubjects,\n  currentLessonValue,\n  handleAction,\n}) => {\n  const [wordValue, setWordValue] = useState(\"\");\n  const [translationValue, setTranslationValue] = useState(\"\");\n\n  const handleWordInput = (e) => setWordValue(e.target.value);\n  const handleTranslationInput = (e) => setTranslationValue(e.target.value);\n\n  const handleAddWordSubmit = (event) => {\n    event.preventDefault();\n    fetch(`${API_URL}words/save_word`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        lesson: currentLessonValue,\n        word: wordValue,\n        translation: translationValue,\n        isLearned: false,\n      }),\n    });\n\n    handleAction({\n      type: \"ADD_WORD\",\n      lesson: currentLessonValue,\n      wordToAdd: {\n        word: wordValue,\n        translation: translationValue,\n        isLearned: false,\n      },\n    });\n\n    setTranslationValue(\"\");\n    setWordValue(\"\");\n  };\n  return (\n    <>\n      {lessonsSubjects.length > 0 ? (\n        <StyledForm onSubmit={handleAddWordSubmit}>\n          <h2>Dodaj fiszkę</h2>\n          <label htmlFor=\"wordValue\">\n            Słówko:\n            <StyledInput\n              autoComplete=\"off\"\n              type=\"text\"\n              name=\"wordValue\"\n              placeholder=\"Wpisz słówko\"\n              value={wordValue}\n              onChange={handleWordInput}\n            />\n          </label>\n          <label htmlFor=\"translationValue\">\n            Tłumaczenie:\n            <StyledInput\n              autoComplete=\"off\"\n              type=\"text\"\n              name=\"translationValue\"\n              placeholder=\"Wpisz tłumaczenie\"\n              value={translationValue}\n              onChange={handleTranslationInput}\n            />\n          </label>\n          <Button submit type=\"submit\" txt=\"Dodaj\" />\n        </StyledForm>\n      ) : null}\n    </>\n  );\n};\n\nexport default ChooseLessonForm;\n","import React from \"react\";\nimport Button from \"../Atoms/Button\";\nimport StyledInput from \"../Shared/StyledInput\";\nimport StyledForm from \"../Shared/StyledForm\";\n\nconst AddLessonForm = ({\n  handleLessonSubmit,\n  lessonValue,\n  handleLessonInput,\n}) => {\n  return (\n    <StyledForm onSubmit={handleLessonSubmit}>\n      <h2>Dodaj lekcję</h2>\n      <label htmlFor=\"lessonValue\">\n        Temat:\n        <StyledInput\n          autoComplete=\"off\"\n          type=\"text\"\n          name=\"lessonValue\"\n          placeholder=\"Wpisz temat lekcji\"\n          value={lessonValue}\n          onChange={handleLessonInput}\n        />\n      </label>\n      <Button submit type=\"submit\" txt=\"Dodaj!\" />\n    </StyledForm>\n  );\n};\n\nexport default AddLessonForm;\n","import React from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport { bounce } from \"react-animations\";\nimport ChooseLessonForm from \"../Molecules/ChooseLessonForm\";\nimport AddWordForm from \"../Molecules/AddWordForm\";\nimport AddLessonForm from \"../Molecules/AddLessonForm\";\n\nconst bounceAnimation = keyframes`${bounce}`;\n\nconst BouncyDiv = styled.div`\n  animation: 1s ${bounceAnimation};\n  display: flex;\n  width: 100%;\n  justify-content: center;\n`;\n\nconst FormPanel = ({\n  isFormPanelVisible,\n  lessonsSubjects,\n  handleAction,\n  currentLessonValue,\n  value,\n  handleSubmit,\n  handleLessonSelect,\n  handleLessonSubmit,\n  handleWordInput,\n  handleLessonInput,\n  handleTranslationInput,\n  lessonValue,\n}) => {\n  return (\n    <>\n      {isFormPanelVisible ? (\n        <BouncyDiv>\n          <ChooseLessonForm\n            lessonsSubjects={lessonsSubjects}\n            value={value}\n            handleSubmit={handleSubmit}\n            handleLessonSelect={handleLessonSelect}\n          />\n          <AddWordForm\n            lessonsSubjects={lessonsSubjects}\n            handleAction={handleAction}\n            currentLessonValue={currentLessonValue}\n            handleTranslationInput={handleTranslationInput}\n            handleWordInput={handleWordInput}\n          />\n          <AddLessonForm\n            lessonValue={lessonValue}\n            handleLessonSubmit={handleLessonSubmit}\n            handleLessonInput={handleLessonInput}\n          />\n        </BouncyDiv>\n      ) : null}\n    </>\n  );\n};\n\nexport default FormPanel;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Button from \"../Atoms/Button\";\n\nconst StyledBox = styled.div`\n  display: flex;\n  height: 6vh;\n  border-top: 0.1vh solid black;\n`;\n\nconst StyledWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  align-content: center;\n  justify-content: flex-end;\n  width: 50%;\n  background-color: #3098d9;\n`;\n\nconst StyledWordListBox = styled.div`\n  display: flex;\n  align-items: center;\n  align-content: center;\n  justify-content: center;\n  width: 100%;\n  background-color: #3098d9;\n`;\n\nconst StyledPanel = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  width: 50%;\n  background-color: #3098d9;\n`;\n\nconst ButtonBottomBar = ({ main, handleIsFormPanelVisibleClick, visible }) => {\n  return (\n    <StyledBox>\n      {main ? (\n        <>\n          <StyledPanel></StyledPanel>\n          <StyledWrapper>\n            <Link to=\"/WordList\">\n              <Button secondary warning renderAs=\"button\" txt=\"word list\" />\n            </Link>\n            <Button\n              secondary\n              warning\n              function={handleIsFormPanelVisibleClick}\n              txt={visible ? \"Ukryj panel\" : \"Pokaz panel\"}\n            />\n          </StyledWrapper>\n        </>\n      ) : (\n        <StyledWordListBox>\n          <Link to=\"/\">\n            <Button secondary renderAs=\"button\" txt=\"Main Board\" />\n          </Link>\n        </StyledWordListBox>\n      )}\n    </StyledBox>\n  );\n};\n\nexport default ButtonBottomBar;\n","import { createGlobalStyle } from \"styled-components\";\nconst GlobalStyle = createGlobalStyle`\nbody {\n  background: #53a9df;\n  font-family: 'Questrial', sans-serif;\n margin:0;\n \n}\n`;\n\nexport default GlobalStyle;\n","import React, { useState, useEffect } from \"react\";\nimport { StyledWrapper } from \"./StyledTemplate\";\nimport Header from \"../../Atoms/Header\";\nimport Board from \"../../Organisms/Board\";\nimport FormPanel from \"../../Organisms/FormPanel\";\nimport ButtonBottomBar from \"../../Molecules/ButtonBottomBar\";\nimport GlobalStyle from \"../../Shared/GlobalTheme\";\nimport API_URL from \"../../../api\";\nimport \"../../../style.css\";\n\nconst MainTemplate = ({ data, handleAction }) => {\n  const [words, setWords] = useState([]);\n  const [currentLessonValue, setCurrentLessonValue] = useState(\"\");\n  const [lessonsSubjects, setLessonsSubjects] = useState([]);\n  const [lessonSelectValue, setLessonSelectValue] = useState(\"\");\n  const [lessonValue, setLessonValue] = useState(\"\");\n  const [isFormPanelVisible, setIsFormPanelVisible] = useState(true);\n\n  useEffect(() => {\n    console.log(data);\n    const lessons = data.map((item) => item.lesson);\n    if (data.length > 0) {\n      setWords(data[0].words);\n      setCurrentLessonValue(lessons[0]);\n      setLessonSelectValue(lessons[0]);\n    }\n    setLessonsSubjects(lessons);\n  }, [data]);\n\n  const handleLessonInput = (e) => setLessonValue(e.target.value);\n  const handleLessonSelect = (e) => setLessonSelectValue(e.target.value);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    fetch(`${API_URL}words/get_words/${lessonSelectValue}`)\n      .then((response) => response.json())\n      .then((data) => {\n        setWords(data.words);\n      });\n    setCurrentLessonValue(lessonSelectValue);\n  };\n\n  const handleLessonSubmit = (event) => {\n    event.preventDefault();\n    fetch(`${API_URL}lessons/create_new_lesson`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ lesson: lessonValue }),\n    });\n\n    handleAction({\n      type: \"ADD\",\n      lessonValue,\n    });\n    setLessonValue(\"\");\n  };\n\n  const handleIsFormPanelVisibleClick = () =>\n    setIsFormPanelVisible((prevValue) => !prevValue);\n\n  return (\n    <>\n      <GlobalStyle />\n      <Header txt=\"FLASHCARDS\" />\n      <StyledWrapper>\n        <Board\n          words={words}\n          lessonsSubjects={lessonsSubjects}\n          currentLessonValue={currentLessonValue}\n          handleAction={handleAction}\n        />\n        {isFormPanelVisible ? (\n          <FormPanel\n            isFormPanelVisible={isFormPanelVisible}\n            handleAction={handleAction}\n            handleLessonInput={handleLessonInput}\n            handleLessonSelect={handleLessonSelect}\n            lessonsSubjects={lessonsSubjects}\n            value={lessonSelectValue}\n            handleSubmit={handleSubmit}\n            currentLessonValue={currentLessonValue}\n            lessonValue={lessonValue}\n            handleLessonSubmit={handleLessonSubmit}\n          />\n        ) : null}\n      </StyledWrapper>\n      <ButtonBottomBar\n        main\n        handleIsFormPanelVisibleClick={handleIsFormPanelVisibleClick}\n        visible={isFormPanelVisible}\n        show={false}\n        lessonsSubjects={lessonsSubjects}\n      />\n    </>\n  );\n};\n\nexport default MainTemplate;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Button from \"../Atoms/Button\";\n\nconst Table = styled.table`\n  font-family: arial, sans-serif;\n  text-align: center;\n  border-collapse: collapse;\n  width: 35%;\n`;\nconst Td = styled.td`\n  border-bottom: 1px solid black;\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-end;\n  padding: 4px;\n`;\nconst Th = styled.th`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-end;\n  border-bottom: 1px solid black;\n  padding: 3px;\n`;\n\nconst WordTable = ({ data, handleConfirm }) => {\n  return (\n    <>\n      {data.length === 0 ? (\n        <>\n          <h1>Brak lekcji</h1>\n          <br />\n          <h1>Przejdź do panelu głównego i dodaj lekcję</h1>\n        </>\n      ) : (\n        data.map((item, index) => {\n          return (\n            <Table key={index}>\n              <tbody>\n                <tr>\n                  <Th>\n                    {`Temat: ${item.lesson}`}\n                    <Button\n                      dangerous\n                      txt=\"Usuń\"\n                      function={() =>\n                        handleConfirm(\"lesson\", item.lesson, null)\n                      }\n                    />\n                  </Th>\n                </tr>\n                {item.words.map((element, index) => {\n                  return (\n                    <tr key={index}>\n                      <Td key={element.word}>\n                        {`${element.word} - ${element.translation}`}\n                        <Button\n                          key={element.translation}\n                          warning\n                          txt=\"Usuń\"\n                          function={() =>\n                            handleConfirm(\"word\", element.word, item.lesson)\n                          }\n                        />\n                      </Td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </Table>\n          );\n        })\n      )}\n    </>\n  );\n};\n\nexport default WordTable;\n","import React, { useState, useEffect } from \"react\";\nimport \"../../style.css\";\nimport styled from \"styled-components\";\nimport GlobalStyle from \"../Shared/GlobalTheme\";\nimport Header from \"../Atoms/Header\";\nimport ButtonBottomBar from \"../Molecules/ButtonBottomBar\";\nimport WordTable from \"../Molecules/WordTable\";\nimport API_URL from \"../../api\";\n\nconst StyledWrapper = styled.div`\n  display: flex;\n  overflow: scroll;\n  flex-direction: column;\n  align-items: center;\n  height: 85vh;\n  width: 100%;\n`;\n\nconst WordList = ({ words, handleAction }) => {\n  const [data, setData] = useState(words);\n\n  useEffect(() => {\n    setData(words);\n  }, [words]);\n\n  const handleConfirm = (lessonOrWord, itemToDelete, lesson) => {\n    switch (lessonOrWord) {\n      case \"lesson\":\n        if (\n          window.confirm(`Czy na pewno chcesz usunąć lekcję ${itemToDelete}?`)\n        ) {\n          handleDeleteLessonClick(itemToDelete);\n        }\n        break;\n      case \"word\":\n        if (\n          window.confirm(`Czy na pewno chcesz usunąć słówko ${itemToDelete}?`)\n        ) {\n          handleDeleteClick(lesson, itemToDelete);\n        }\n        break;\n      default:\n        return null;\n    }\n  };\n\n  const handleDeleteClick = (lesson, element) => {\n    fetch(`${API_URL}words/delete_word`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        lesson: lesson,\n        word: element.word,\n        translation: element.translate,\n      }),\n    });\n\n    data.map((item, index) => {\n      if (lesson === item.lesson) {\n        data[index].words.map((el, id) => {\n          if (element === el.word) {\n            data[index].words.splice(id, 1);\n          }\n        });\n      }\n      setData([...data]);\n    });\n  };\n\n  const handleDeleteLessonClick = (itemToDelete) => {\n    fetch(`${API_URL}lessons/delete_lesson/${itemToDelete}`, {\n      method: \"DELETE\",\n    }).then((response) => response.json());\n\n    handleAction({\n      type: \"REMOVE\",\n      itemToDelete,\n    });\n  };\n\n  return (\n    <>\n      <GlobalStyle />\n      <Header txt=\"Lista fiszek\" />\n      <StyledWrapper>\n        <WordTable data={data} handleConfirm={handleConfirm} />\n      </StyledWrapper>\n      <ButtonBottomBar />\n    </>\n  );\n};\n\nexport default WordList;\n","const appReducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD\":\n      return [...state, { lesson: action.lessonValue, words: [] }];\n    case \"REMOVE\":\n      return state.filter((item) => item.lesson !== action.itemToDelete);\n    case \"ADD_WORD\":\n      state\n        .filter((item) => item.lesson === action.lesson)[0]\n        .words.push(action.wordToAdd);\n      console.log(state);\n      return state;\n    case \"IS_WORD_LEARNED\":\n      state\n        .filter((item) => item.lesson === action.lesson)[0]\n        .words.filter((item) => item.word === action.word)[0].isLearned =\n        action.status;\n      return state;\n    case \"REMOVE_WORD\":\n      return;\n    case \"FETCH\":\n      return action.data;\n    default:\n      return state;\n  }\n};\n\nexport default appReducer;\n","import React, { useReducer, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport MainTemplate from \"../Templates/MainTemplate/MainTemplate\";\nimport WordList from \"../Templates/WordList\";\nimport appReducer from \"../../reducers/appReducer\";\nimport API_URL from \"../../api\";\n\nconst App = () => {\n  const [state, dispatch] = useReducer(appReducer, []);\n\n  useEffect(() => {\n    fetch(`${API_URL}lessons/get_lessons_with_words`)\n      .then((response) => {\n        if (response.ok) {\n          return response;\n        }\n        throw Error(response.status);\n      })\n      .then((response) => response.json())\n      .then((data) => {\n        dispatch({ type: \"FETCH\", data });\n      })\n      .catch((error) => console.log(error));\n  }, []);\n\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route exact path=\"/\">\n          <MainTemplate data={state} handleAction={dispatch} />\n        </Route>\n        <Route path=\"/WordList\">\n          <WordList words={state} handleAction={dispatch} />\n        </Route>\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/Pages/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}